{"ast":null,"code":"import _asyncToGenerator from \"/home/yusa/assignment2_AB1FA8/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PetService {\n  constructor(http) {\n    this.http = http;\n    this.pets = [{\n      id: 1,\n      name: 'issue1',\n      species: 'desc1',\n      note: 'PC11',\n      status: 'NEW'\n    }, {\n      id: 2,\n      name: 'issue2',\n      species: 'desc2',\n      note: 'PC11',\n      status: 'DOING'\n    }, {\n      id: 3,\n      name: 'issue3',\n      species: 'desc3',\n      note: 'PC11',\n      status: 'DONE'\n    }, {\n      id: 4,\n      name: 'issue4',\n      species: 'desc4',\n      note: 'PC11',\n      status: 'NEW'\n    }];\n    this.petsUrl = 'http://localhost:8000/api/pets';\n  }\n\n  getPets() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield lastValueFrom(_this.http.get(_this.petsUrl));\n    })();\n  }\n\n  getPet(id) {\n    return this.pets.find(pet => pet.id === id);\n  }\n\n  updatePet(id, modifiedPet) {\n    const pet = this.getPet(id);\n\n    if (pet) {\n      Object.assign(pet, modifiedPet);\n      return pet;\n    }\n\n    return;\n  }\n\n  addPet(newPet) {\n    const id = this.pets.length + 1;\n    newPet.id = id;\n    this.pets.push(newPet);\n    return newPet;\n  }\n\n}\n\nPetService.ɵfac = function PetService_Factory(t) {\n  return new (t || PetService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nPetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PetService,\n  factory: PetService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/yusa/assignment2_AB1FA8/client/src/app/pet.service.ts"],"names":["lastValueFrom","i0","i1","PetService","constructor","http","pets","id","name","species","note","status","petsUrl","getPets","get","getPet","find","pet","updatePet","modifiedPet","Object","assign","addPet","newPet","length","push","ɵfac","PetService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,aAAT,QAA8B,MAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,IAAL,GAAY,CACR;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,QAAf;AAAyBC,MAAAA,OAAO,EAAE,OAAlC;AAA2CC,MAAAA,IAAI,EAAE,MAAjD;AAAyDC,MAAAA,MAAM,EAAE;AAAjE,KADQ,EAER;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,QAAf;AAAyBC,MAAAA,OAAO,EAAE,OAAlC;AAA2CC,MAAAA,IAAI,EAAE,MAAjD;AAAyDC,MAAAA,MAAM,EAAE;AAAjE,KAFQ,EAGR;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,QAAf;AAAyBC,MAAAA,OAAO,EAAE,OAAlC;AAA2CC,MAAAA,IAAI,EAAE,MAAjD;AAAyDC,MAAAA,MAAM,EAAE;AAAjE,KAHQ,EAIR;AAAEJ,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,QAAf;AAAyBC,MAAAA,OAAO,EAAE,OAAlC;AAA2CC,MAAAA,IAAI,EAAE,MAAjD;AAAyDC,MAAAA,MAAM,EAAE;AAAjE,KAJQ,CAAZ;AAMA,SAAKC,OAAL,GAAe,gCAAf;AACH;;AACKC,EAAAA,OAAO,GAAG;AAAA;;AAAA;AACZ,mBAAab,aAAa,CAAC,KAAI,CAACK,IAAL,CAAUS,GAAV,CAAc,KAAI,CAACF,OAAnB,CAAD,CAA1B;AADY;AAEf;;AACDG,EAAAA,MAAM,CAACR,EAAD,EAAK;AACP,WAAO,KAAKD,IAAL,CAAUU,IAAV,CAAgBC,GAAD,IAASA,GAAG,CAACV,EAAJ,KAAWA,EAAnC,CAAP;AACH;;AACDW,EAAAA,SAAS,CAACX,EAAD,EAAKY,WAAL,EAAkB;AACvB,UAAMF,GAAG,GAAG,KAAKF,MAAL,CAAYR,EAAZ,CAAZ;;AACA,QAAIU,GAAJ,EAAS;AACLG,MAAAA,MAAM,CAACC,MAAP,CAAcJ,GAAd,EAAmBE,WAAnB;AACA,aAAOF,GAAP;AACH;;AACD;AACH;;AACDK,EAAAA,MAAM,CAACC,MAAD,EAAS;AACX,UAAMhB,EAAE,GAAG,KAAKD,IAAL,CAAUkB,MAAV,GAAmB,CAA9B;AACAD,IAAAA,MAAM,CAAChB,EAAP,GAAYA,EAAZ;AACA,SAAKD,IAAL,CAAUmB,IAAV,CAAeF,MAAf;AACA,WAAOA,MAAP;AACH;;AA9BmB;;AAgCxBpB,UAAU,CAACuB,IAAX,GAAkB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAAE,SAAO,KAAKA,CAAC,IAAIzB,UAAV,EAAsBF,EAAE,CAAC4B,QAAH,CAAY3B,EAAE,CAAC4B,UAAf,CAAtB,CAAP;AAA2D,CAA9G;;AACA3B,UAAU,CAAC4B,KAAX,GAAmB,aAAc9B,EAAE,CAAC+B,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAE9B,UAAT;AAAqB+B,EAAAA,OAAO,EAAE/B,UAAU,CAACuB,IAAzC;AAA+CS,EAAAA,UAAU,EAAE;AAA3D,CAAtB,CAAjC","sourcesContent":["import { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PetService {\n    constructor(http) {\n        this.http = http;\n        this.pets = [\n            { id: 1, name: 'issue1', species: 'desc1', note: 'PC11', status: 'NEW' },\n            { id: 2, name: 'issue2', species: 'desc2', note: 'PC11', status: 'DOING' },\n            { id: 3, name: 'issue3', species: 'desc3', note: 'PC11', status: 'DONE' },\n            { id: 4, name: 'issue4', species: 'desc4', note: 'PC11', status: 'NEW' },\n        ];\n        this.petsUrl = 'http://localhost:8000/api/pets';\n    }\n    async getPets() {\n        return await lastValueFrom(this.http.get(this.petsUrl));\n    }\n    getPet(id) {\n        return this.pets.find((pet) => pet.id === id);\n    }\n    updatePet(id, modifiedPet) {\n        const pet = this.getPet(id);\n        if (pet) {\n            Object.assign(pet, modifiedPet);\n            return pet;\n        }\n        return;\n    }\n    addPet(newPet) {\n        const id = this.pets.length + 1;\n        newPet.id = id;\n        this.pets.push(newPet);\n        return newPet;\n    }\n}\nPetService.ɵfac = function PetService_Factory(t) { return new (t || PetService)(i0.ɵɵinject(i1.HttpClient)); };\nPetService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PetService, factory: PetService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/home/yusa/assignment2_AB1FA8/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    Accept: 'application/json' // 'X-Requested-With': 'XMLHttpRequest',\n\n  })\n};\nexport class PetService {\n  constructor(http) {\n    this.http = http;\n    this.petsUrl = 'http://localhost:8000/api/pets';\n  }\n\n  getPets() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      return yield lastValueFrom(_this.http.get(_this.petsUrl));\n    })();\n  }\n\n  getPet(id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield lastValueFrom(_this2.http.get(`${_this2.petsUrl}/${id}`));\n    })();\n  }\n\n  updatePet(id, modifiedPet) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield lastValueFrom(_this3.http.patch(`${_this3.petsUrl}/${id}`, modifiedPet, httpOptions));\n    })();\n  }\n\n  addPet(newPet) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      return yield lastValueFrom(_this4.http.post(_this4.petsUrl, newPet, httpOptions));\n    })();\n  }\n\n}\n\nPetService.ɵfac = function PetService_Factory(t) {\n  return new (t || PetService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nPetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PetService,\n  factory: PetService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/yusa/assignment2_AB1FA8/client/src/app/pet.service.ts"],"names":["HttpHeaders","lastValueFrom","i0","i1","httpOptions","headers","Accept","PetService","constructor","http","petsUrl","getPets","get","getPet","id","updatePet","modifiedPet","patch","addPet","newPet","post","ɵfac","PetService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,SAASA,WAAT,QAA4B,sBAA5B;AACA,SAASC,aAAT,QAA8B,MAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,OAAO,EAAE,IAAIL,WAAJ,CAAgB;AACrB,oBAAgB,kBADK;AAErBM,IAAAA,MAAM,EAAE,kBAFa,CAGrB;;AAHqB,GAAhB;AADO,CAApB;AAOA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAe,gCAAf;AACH;;AACKC,EAAAA,OAAO,GAAG;AAAA;;AAAA;AACZ,mBAAaV,aAAa,CAAC,KAAI,CAACQ,IAAL,CAAUG,GAAV,CAAc,KAAI,CAACF,OAAnB,CAAD,CAA1B;AADY;AAEf;;AACKG,EAAAA,MAAM,CAACC,EAAD,EAAK;AAAA;;AAAA;AACb,mBAAab,aAAa,CAAC,MAAI,CAACQ,IAAL,CAAUG,GAAV,CAAe,GAAE,MAAI,CAACF,OAAQ,IAAGI,EAAG,EAApC,CAAD,CAA1B;AADa;AAEhB;;AACKC,EAAAA,SAAS,CAACD,EAAD,EAAKE,WAAL,EAAkB;AAAA;;AAAA;AAC7B,mBAAaf,aAAa,CAAC,MAAI,CAACQ,IAAL,CAAUQ,KAAV,CAAiB,GAAE,MAAI,CAACP,OAAQ,IAAGI,EAAG,EAAtC,EAAyCE,WAAzC,EAAsDZ,WAAtD,CAAD,CAA1B;AAD6B;AAEhC;;AACKc,EAAAA,MAAM,CAACC,MAAD,EAAS;AAAA;;AAAA;AACjB,mBAAalB,aAAa,CAAC,MAAI,CAACQ,IAAL,CAAUW,IAAV,CAAe,MAAI,CAACV,OAApB,EAA6BS,MAA7B,EAAqCf,WAArC,CAAD,CAA1B;AADiB;AAEpB;;AAhBmB;;AAkBxBG,UAAU,CAACc,IAAX,GAAkB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAAE,SAAO,KAAKA,CAAC,IAAIhB,UAAV,EAAsBL,EAAE,CAACsB,QAAH,CAAYrB,EAAE,CAACsB,UAAf,CAAtB,CAAP;AAA2D,CAA9G;;AACAlB,UAAU,CAACmB,KAAX,GAAmB,aAAcxB,EAAE,CAACyB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAErB,UAAT;AAAqBsB,EAAAA,OAAO,EAAEtB,UAAU,CAACc,IAAzC;AAA+CS,EAAAA,UAAU,EAAE;AAA3D,CAAtB,CAAjC","sourcesContent":["import { HttpHeaders } from '@angular/common/http';\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n    headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        // 'X-Requested-With': 'XMLHttpRequest',\n    }),\n};\nexport class PetService {\n    constructor(http) {\n        this.http = http;\n        this.petsUrl = 'http://localhost:8000/api/pets';\n    }\n    async getPets() {\n        return await lastValueFrom(this.http.get(this.petsUrl));\n    }\n    async getPet(id) {\n        return await lastValueFrom(this.http.get(`${this.petsUrl}/${id}`));\n    }\n    async updatePet(id, modifiedPet) {\n        return await lastValueFrom(this.http.patch(`${this.petsUrl}/${id}`, modifiedPet, httpOptions));\n    }\n    async addPet(newPet) {\n        return await lastValueFrom(this.http.post(this.petsUrl, newPet, httpOptions));\n    }\n}\nPetService.ɵfac = function PetService_Factory(t) { return new (t || PetService)(i0.ɵɵinject(i1.HttpClient)); };\nPetService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PetService, factory: PetService.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}